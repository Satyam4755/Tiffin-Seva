<%- include('../partials/head') %>
<%- include('../partials/background') %>
<style> 
  .headings {
    margin: 10px auto 20px auto;
    text-align: center;
    background: linear-gradient(135deg, #fdfcfb, #e2d1c3);
    padding: 20px 25px;
    border-radius: 12px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    max-width: 40%;
    max-height: 7%;
  }

  .headings h1 {
    font-size: 2em;
    color: #2c3e50;
    margin: 0;
  }

  .headings h2 {
    font-size: 1.2em;
    color: #7f8c8d;
    margin-top: 10px;
    font-weight: 500;
  }

  .mainDabba {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 30px;
    padding: 20px;
    max-width: 100%;
    margin: 0 auto 60px auto;
    animation: fadeIn 1s ease;
  }

  .cards-container,
  .booking-cards-container {
    flex: 1 1 320px;
    max-width: 420px;
  }

  .card {
    background: rgba(255, 255, 255, 0.9);
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.4s ease, box-shadow 0.3s ease;
  }

  .card:hover {
    transform: scale(1.05);
    box-shadow: 0 10px 28px rgba(0, 0, 0, 0.2);
  }

  .card img {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    transition: transform 0.4s ease;
  }

  .card:hover img {
    transform: scale(1.05);
  }

  .content {
    padding: 15px;
  }

  .content h3 {
    color: #ff4e74;
    margin-bottom: 8px;
    font-size: 1.3em;
  }

  .month-btn.selected {
  background-color: #ffe6ec;
  border-color: #ff4e74;
  color: #d6336c;
}
  .content p {
    margin: 5px 0;
    color: #555;
    font-size: 0.95em;
  }
  .img1 {
    position: absolute;
    top: 15%;
    right: 2.5%;
    width: 25vw;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    border-radius: 42% 58% 65% 35% / 40% 30% 70% 60%;
    transition: transform 0.4s ease;
    z-index: -1;
    }
    .img2 {
    position: absolute;
    top: 40%;
    left: 2.5%;
    width: 25vw;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    border-radius: 100% 50% 100% 50% / 60% 40% 60% 40%;
    transition: transform 0.3s ease;
    z-index: -1;
}

  form {
    background: rgba(255, 255, 255, 0.95);
    border-radius: 15px;
    padding: 25px;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    animation: fadeInUp 1s ease;
  }

  form h2 {
    text-align: center;
    color: #ff4e74;
    margin-bottom: 20px;
    font-size: 1.4em;
  }

  label {
    font-weight: 500;
    display: block;
    margin-bottom: 6px;
    color: #333;
  }

  input, select {
    width: 100%;
    padding: 10px;
    margin-bottom: 14px;
    border: 1px solid #ccc;
    border-radius: 10px;
    transition: border-color 0.3s ease;
    font-family: inherit;
    font-size: 0.95em;
  }

  input:focus, select:focus {
    border-color: #ff4e74;
    outline: none;
  }

  button {
    width: 100%;
    padding: 12px;
    background-color: #ff4e74;
    border: none;
    border-radius: 10px;
    color: white;
    font-weight: bold;
    font-size: 15px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  button:hover {
    background-color: #e53963;
    transform: scale(1.05);
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(40px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes fadeInUp {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @media (max-width: 768px) {
    .mainDabba {
      flex-direction: row;
      padding: 15px;
    }
    form{
      width: 87%;
      padding: 20px;
    }
    input, select {
      width: 90%;
    }

    .headings {
      padding: 15px 20px;
    }

    .cards-container, .booking-cards-container {
      max-width: 100%;
    }
  }

  body {
    min-height: 100vh;
    overflow-x: hidden;
  }
  /* Custom Radio Tiles */
.radio-tile-group {
  display: flex;
  gap: 12px;
  margin-bottom: 20px;
  flex-wrap: wrap;
}

.radio-tile {
  flex: 1 1 45%;
  background: #fff;
  border: 2px solid #ccc;
  border-radius: 12px;
  padding: 14px 18px;
  text-align: center;
  font-weight: 500;
  cursor: pointer;
  transition: 0.3s ease;
  position: relative;
  box-shadow: 0 4px 10px rgba(0,0,0,0.06);
}

.radio-tile:hover {
  border-color: #ff4e74;
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.1);
}

.radio-tile input[type="checkbox"],
.radio-tile input[type="radio"] {
  display: none;
}

.radio-tile.selected {
  border-color: #ff4e74;
  background-color: #ffe6ec;
  color: #d6336c;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
}
.month-buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 10px;
  margin: 15px 0;
}

.month-btn {
  padding: 10px;
  border-radius: 8px;
  background-color: #eee;
  border: 2px solid transparent;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.month-btn:hover {
  background-color: #ffe6ec;
  border-color: #ff4e74;
}


.badaDabba{
        margin-bottom: 15%;
    }
</style>

<%- include('../partials/nav') %>



<div class="badaDabba">

<img src="/IMG_3134.jpg" class="img1" alt="image">

<img src="/IMG_3108.jpg" class="img2" alt="image">


<div class="mainDabba">
  <div class="cards-container">
    <div class="card">
      <a id="link" href="/user/vender-list/<%= vender._id %>" style="text-decoration: none; color: black;">
        <img src="<%= vender.bannerImage || '/default.jpg' %>" alt="Vendor Banner" style="width:100%; height:180px; object-fit:cover; border-radius:12px;">
        <div class="content">
          <h3><%= vender.serviceName %></h3>
          <p><strong>Location:</strong> <%= vender.location %></p>
          <p><strong>Price Per Day:</strong> ₹<%= vender.pricePerDay %></p>
          <p><strong>Price Per Month:</strong> ₹<%= vender.pricePerMonth %></p>
          <p>
            <strong>Ratings:</strong>
            <% const fullStars = Math.floor(vender.averageRating || 0); %>
            <% for(let i=0; i < fullStars; i++) { %> ⭐ <% } %>
            <span style="margin-left: 5px; font-weight: 700; color: red;">
              (<%= vender.averageRating || 0 %>/5)
            </span>
          </p>
        </div>
      </a>
    </div>
  </div>

  <div class="booking-cards-container">
    <!-- no action attribute because we handle via JS -->
    <form id="bookingForm">
      <%-include('../partials/errorHandel')%>
      <h2>Vendor Booking</h2>

      <input type="hidden" name="venderId" value="<%= vender._id %>">

      <label for="name">Full Name</label>
      <input type="text" id="name" name="name" placeholder="Enter your full name" required>

      <label for="phone">Phone Number</label>
      <input type="tel" id="phone" name="phone" placeholder="Enter your phone number (10 digits)" pattern="[0-9]{10}" required>

      <!-- Address -->
      <label for="address">Your Address</label>
      <input type="text" name="address" id="address" value="<%= user.location || 'No address saved' %>" readonly style="background:#f1f1f1; cursor:not-allowed;">
      <p style="font-size: 13px; color: #6c5ce7; margin-top: 4px;">
        This is your saved address from profile.
      </p>

      <div class="radio-tile-group">
        <label class="radio-tile" id="perDayTile">
          <input type="radio" id="perday" name="subscription_model" value="Per Day" onclick="toggleTimeOptions()">
          Per Day
        </label>
        <label class="radio-tile" id="perMonthTile">
          <input type="radio" id="permonth" name="subscription_model" value="Per Month" onclick="toggleTimeOptions()">
          Per Month
        </label>
      </div>

      <!-- lunch/dinner for both -->
      <div id="timeOptions" style="display: none;">
        <div class="radio-tile-group">
          <label class="radio-tile" id="lunchTile">
            <input type="checkbox" name="time_type" value="lunch" onchange="updateTileSelection(); calculateTotal();">
            Lunch
          </label>
          <label class="radio-tile" id="dinnerTile">
            <input type="checkbox" name="time_type" value="dinner" onchange="updateTileSelection(); calculateTotal();">
            Dinner
          </label>
        </div>
      </div>

      <!-- Per Day dates -->
      <div id="dateInputs" style="display:none;">
        <label for="startingDate">Starting Date</label>
        <input type="date" id="startingDate" name="startingDate" min="<%= new Date().toISOString().split('T')[0] %>">

        <label for="endingDate">Ending Date</label>
        <input type="date" id="endingDate" name="endingDate">
      </div>

      <!-- Per Month -->
      <div id="monthGrid" style="display: none;">
        <label>Select Number of Months</label>
        <div class="month-buttons">
          <% for (let i = 1; i <= 12; i++) { %>
            <button type="button" class="month-btn" data-months="<%= i %>"><%= i %></button>
          <% } %>
        </div>
      </div>
      <input type="hidden" id="selectedMonths" name="selectedMonths">
      <p id="calculatedEndDate" style="color: green; font-weight: bold; display: none;"></p>

      <!-- Removed the Payment Method select box -->

      <input type="hidden" id="perdayValue" name="perdayValue" value="<%=vender.pricePerDay%>">
      <input type="hidden" id="permonthValue" name="permonthValue" value="<%=vender.pricePerMonth%>">
      <input type="hidden" name="totalAmount" id="totalAmountInput">
      <input type="hidden" id="razorpayKey" value="<%= RAZORPAY_KEY_ID %>">

      <h3 style="color: #d6336c; text-align: center;">Total Amount: ₹<span id="totalAmount">0</span></h3>
      <button class="submit" type="button" id="payBtn">Book & Pay Now</button>
    </form>
  </div>
</div>


<script>
  // === Utility functions ===
  const pad = n => (n < 10 ? '0' + n : n);
  const formatDateLocal = d => `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}`;

  // === Elements ===
  const totalElement = document.getElementById('totalAmount');
  const subscriptionRadios = document.getElementsByName('subscription_model');
  const startInput = document.getElementById('startingDate');
  const endInput = document.getElementById('endingDate');
  const totalAmount = document.getElementById('totalAmountInput');
  const display = document.getElementById('calculatedEndDate');
  const monthButtons = document.querySelectorAll('.month-btn');
  const payBtn = document.getElementById('payBtn');
  const timeTypeCheckboxes = document.querySelectorAll('input[name="time_type"]');

  // === Toggle visibility ===
  function toggleTimeOptions() {
    const isPerDay = document.getElementById('perday').checked;
    const isPerMonth = document.getElementById('permonth').checked;

    document.getElementById('timeOptions').style.display = (isPerDay || isPerMonth) ? 'block' : 'none';
    document.getElementById('dateInputs').style.display = isPerDay ? 'block' : 'none';
    if (document.getElementById('monthGrid'))
      document.getElementById('monthGrid').style.display = isPerMonth ? 'block' : 'none';

    display.style.display = isPerMonth ? 'block' : 'none';
    calculateTotal();
    checkCutoff();
  }

  // === Total calculation ===
  function calculateTotal() {
    const perDay = Number(document.getElementById('perdayValue').value || 0);
    const perMonth = Number(document.getElementById('permonthValue').value || 0);
    const selectedModel = Array.from(subscriptionRadios).find(r => r.checked)?.value;
    const startDate = new Date(startInput.value);
    const endDate = new Date(endInput.value);
    const selectedMonths = Number(document.getElementById('selectedMonths').value || 0);
    const timeSelections = document.querySelectorAll('input[name="time_type"]:checked').length;

    let total = 0;
    if (selectedModel === 'Per Day') {
      if (isNaN(startDate) || isNaN(endDate) || endDate < startDate) {
        totalElement.textContent = 0;
        totalAmount.value = 0;
        return;
      }
      const diffDays = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24)) + 1;
      total = diffDays * perDay * timeSelections;
    } else if (selectedModel === 'Per Month') {
      if (!selectedMonths) {
        totalElement.textContent = 0;
        totalAmount.value = 0;
        return;
      }
      let pricePerMonth = timeSelections === 1 ? perMonth / 2 :
                          timeSelections >= 2 ? perMonth : 0;
      total = selectedMonths * pricePerMonth;
    }

    totalElement.textContent = total;
    totalAmount.value = total;
  }

  // === Highlight tiles ===
  function updateTileSelection() {
    document.getElementById('perDayTile').classList.toggle('selected', document.getElementById('perday').checked);
    document.getElementById('perMonthTile').classList.toggle('selected', document.getElementById('permonth').checked);
    document.getElementById('lunchTile').classList.toggle('selected', document.querySelector('input[value="lunch"]').checked);
    document.getElementById('dinnerTile').classList.toggle('selected', document.querySelector('input[value="dinner"]').checked);
  }

  // === Cutoff logic ===
  function checkCutoff() {
    let allowed = true;
    const selectedModel = Array.from(subscriptionRadios).find(r => r.checked)?.value;
    if (selectedModel === 'Per Day') {
      const selectedTimes = Array.from(timeTypeCheckboxes)
        .filter(cb => cb.checked)
        .map(cb => cb.value.toLowerCase());

      const now = new Date();
      const hour = now.getHours();
      const todayStr = formatDateLocal(now);
      const selectedDate = startInput.value;

      if (selectedDate === todayStr) {
        if (selectedTimes.includes('lunch') && hour >= 11) allowed = false;
        if (selectedTimes.includes('dinner') && hour >= 18) allowed = false;
      }
    }
    payBtn.disabled = !allowed;
    payBtn.title = allowed ? '' : 'Booking closed for today for selected meal time';
  }

  // === Event listeners ===
  document.querySelectorAll('input[name="subscription_model"]').forEach(input => {
    input.addEventListener('change', () => {
      toggleTimeOptions();
      updateTileSelection();
      checkCutoff();
    });
  });
  document.querySelectorAll('input[name="time_type"]').forEach(input => {
    input.addEventListener('change', () => {
      updateTileSelection();
      calculateTotal();
      checkCutoff();
    });
  });
  startInput.addEventListener('change', () => { calculateTotal(); checkCutoff(); });
  endInput.addEventListener('change', calculateTotal);

  monthButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      monthButtons.forEach(b => b.classList.remove('selected'));
      btn.classList.add('selected');

      const months = parseInt(btn.getAttribute('data-months'));
      document.getElementById('selectedMonths').value = months;

      const now = new Date();
      let start = new Date();
      if (now.getHours() >= 11) start.setDate(start.getDate() + 1);
      start.setHours(0, 0, 0, 0);

      const end = new Date(start);
      end.setDate(start.getDate() + (30 * months));

      startInput.value = formatDateLocal(start);
      endInput.value = formatDateLocal(end);

      const options = { year: 'numeric', month: 'short', day: 'numeric' };
      display.textContent =
        `Your meal time for this subscription will be from ${start.toLocaleDateString('en-GB', options)} to ${end.toLocaleDateString('en-GB', options)}`;
      display.style.display = 'block';

      calculateTotal();
      checkCutoff();
    });
  });

  window.addEventListener('DOMContentLoaded', checkCutoff);
</script>

<!-- Razorpay Checkout -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  payBtn.addEventListener('click', async function (e) {
    e.preventDefault();
    if (payBtn.disabled) return;

    const amount = Number(document.getElementById('totalAmountInput').value || 0);
    if (!amount || amount <= 0) {
      alert('Please select a valid plan first');
      return;
    }

    const RAZORPAY_KEY_ID = document.getElementById('razorpayKey').value;
    // 👇 hit your backend to create order
    const res = await fetch('/payment/create-order', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ amount })
    });
    const order = await res.json();

    const options = {
      key: RAZORPAY_KEY_ID,
      amount: order.amount,
      currency: order.currency,
      name: 'Tiffin Seva',
      description: 'Meal Subscription Booking',
      order_id: order.id,
      handler: function (response) {
        // after successful payment → post booking to server
        fetch(`/user/submit_booking/<%=vender._id%>`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            name: document.getElementById('name').value,
            phone: document.getElementById('phone').value,
            address: document.getElementById('address').value,
            subscription_model: Array.from(subscriptionRadios).find(r => r.checked)?.value,
            startingDate: document.getElementById('startingDate').value,
            endingDate: document.getElementById('endingDate').value,
            time_type: Array.from(document.querySelectorAll('input[name="time_type"]:checked')).map(cb => cb.value),
            selectedMonths: document.getElementById('selectedMonths').value,
            payment: 'Paid via Razorpay',
            totalAmount: amount,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature
          })
        }).then(() => {
          window.location.href = '/user/submit_booking';
        });
      },
      theme: { color: '#3399cc' }
    };
    const rzp = new Razorpay(options);
    rzp.open();
  });
</script>

  <%-include('../partials/loading')%>
   
</body>
</html>
 
